{"ast":null,"code":"var _jsxFileName = \"/Users/thomasogawa/Documents/CPSC_Courses/CPSC458/criminal-guessing-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { displayPerson, displayCriminal } from './apis/apis.js';\nimport GuessButtons from './components/guessbuttons.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  ;\n  const [profileData, setProfileData] = useState(null);\n  const [selectedType, setSelectedType] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      const randomChoice = Math.random() < 0.5 ? 'person' : 'criminal';\n      if (randomChoice === 'person') {\n        const data = await displayPerson();\n        setProfileData(data.props);\n        setSelectedType('person');\n      } else {\n        const data = await displayCriminal();\n        setProfileData(data.props);\n        setSelectedType('criminal');\n      }\n    };\n    fetchData();\n  }, [setProfileData, setSelectedType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Criminal or Not?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), profileData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Intro_Paragraph\",\n        children: \"Hi! Welcome to this basic guessing game I have created whether simply select whether the person shown below is or isn't a criminal! All criminals are sources using the FBI's websites API and the Non-Criminals are from the randomuser.me API \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), profileData.name && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Person_Name\",\n        children: profileData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 32\n      }, this), profileData.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"personimg\",\n        src: profileData.image,\n        alt: profileData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(GuessButtons, {\n        isCriminal: selectedType === 'criminal'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No profile data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BjmVhZxqhoXoW735B382RH78N4s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","displayPerson","displayCriminal","GuessButtons","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","profileData","setProfileData","selectedType","setSelectedType","fetchData","randomChoice","Math","random","data","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","image","src","alt","isCriminal","_c","$RefreshReg$"],"sources":["/Users/thomasogawa/Documents/CPSC_Courses/CPSC458/criminal-guessing-game/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { displayPerson, displayCriminal } from './apis/apis.js';\nimport GuessButtons from './components/guessbuttons.js';\nimport './App.css';\n\nfunction App() {;\n  const [profileData, setProfileData] = useState(null);\n  const [selectedType, setSelectedType] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const randomChoice = Math.random() < 0.5 ? 'person' : 'criminal';\n\n      \n\n      if (randomChoice === 'person') {\n        const data = await displayPerson();\n        setProfileData(data.props);\n        setSelectedType('person');\n      } else {\n        const data = await displayCriminal();\n        setProfileData(data.props);\n        setSelectedType('criminal');\n      }\n    };\n\n    fetchData();\n  }, [setProfileData, setSelectedType]);\n\n  return (\n    <div className='App'>\n      <h1>Criminal or Not?</h1>\n      {profileData ? (\n        <>\n          <h2 className='Intro_Paragraph'>Hi! Welcome to this basic guessing game I have created whether simply select whether the person shown below is or isn't a criminal! All criminals are sources using the FBI's websites API and the Non-Criminals are from the randomuser.me API </h2>\n          {profileData.name && <h3 className='Person_Name'>{profileData.name}</h3>}\n          {profileData.image && <img className='personimg' src={profileData.image} alt={profileData.name} />}\n          <GuessButtons isCriminal={selectedType === 'criminal'} />\n        </>\n      ) : (\n        <p>No profile data available.</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,eAAe,QAAQ,gBAAgB;AAC/D,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAC;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,YAAY,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,GAAG,UAAU;MAIhE,IAAIF,YAAY,KAAK,QAAQ,EAAE;QAC7B,MAAMG,IAAI,GAAG,MAAMjB,aAAa,CAAC,CAAC;QAClCU,cAAc,CAACO,IAAI,CAACC,KAAK,CAAC;QAC1BN,eAAe,CAAC,QAAQ,CAAC;MAC3B,CAAC,MAAM;QACL,MAAMK,IAAI,GAAG,MAAMhB,eAAe,CAAC,CAAC;QACpCS,cAAc,CAACO,IAAI,CAACC,KAAK,CAAC;QAC1BN,eAAe,CAAC,UAAU,CAAC;MAC7B;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,cAAc,EAAEE,eAAe,CAAC,CAAC;EAErC,oBACER,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA;MAAAgB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBf,WAAW,gBACVL,OAAA,CAAAE,SAAA;MAAAc,QAAA,gBACEhB,OAAA;QAAIe,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAgP;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpRf,WAAW,CAACgB,IAAI,iBAAIrB,OAAA;QAAIe,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEX,WAAW,CAACgB;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACvEf,WAAW,CAACiB,KAAK,iBAAItB,OAAA;QAAKe,SAAS,EAAC,WAAW;QAACQ,GAAG,EAAElB,WAAW,CAACiB,KAAM;QAACE,GAAG,EAAEnB,WAAW,CAACgB;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClGpB,OAAA,CAACF,YAAY;QAAC2B,UAAU,EAAElB,YAAY,KAAK;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACzD,CAAC,gBAEHpB,OAAA;MAAAgB,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CAvCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}