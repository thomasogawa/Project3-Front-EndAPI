{"ast":null,"code":"var _jsxFileName = \"/Users/thomasogawa/Documents/CPSC_Courses/CPSC458/criminal-guessing-game/src/apis/apis.js\";\nimport Person from \"../components/person\";\nimport Criminal from \"../components/criminal\";\n\n// Get a random person (not criminal) from the API https://randomuser.me/api/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function getPersonData() {\n  const res = await fetch('https://randomuser.me/api/');\n  if (!res.ok) {\n    throw new Error('Failed to fetch person data');\n  }\n  const data = await res.json();\n  const person = data.results[0];\n  return {\n    name: `${person.name.first} ${person.name.last}`,\n    image: person.picture.large\n  };\n}\n\n// Get a random criminal from the FBI API https://api.fbi.gov/wanted/v1/list\nexport async function getCriminalData() {\n  const res = await fetch('https://api.fbi.gov/wanted/v1/list');\n  if (!res.ok) {\n    throw new Error('Failed to fetch criminal data');\n  }\n  const data = await res.json();\n  const randomCriminalIndex = Math.floor(Math.random() * data.items.length);\n  const criminal = data.items[randomCriminalIndex];\n  return {\n    name: criminal.title,\n    image: criminal.images[randomCriminalIndex].large\n  };\n}\n\n// Fetch and display a person\nexport async function displayPerson() {\n  const person = await getPersonData();\n  return /*#__PURE__*/_jsxDEV(Person, {\n    name: person.name,\n    image: person.image\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n// Fetch and display a criminal\nexport async function displayCriminal() {\n  const criminal = await getCriminalData();\n  return /*#__PURE__*/_jsxDEV(Criminal, {\n    name: criminal.name,\n    image: criminal.image\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["Person","Criminal","jsxDEV","_jsxDEV","getPersonData","res","fetch","ok","Error","data","json","person","results","name","first","last","image","picture","large","getCriminalData","randomCriminalIndex","Math","floor","random","items","length","criminal","title","images","displayPerson","fileName","_jsxFileName","lineNumber","columnNumber","displayCriminal"],"sources":["/Users/thomasogawa/Documents/CPSC_Courses/CPSC458/criminal-guessing-game/src/apis/apis.js"],"sourcesContent":["import Person from \"../components/person\";\nimport Criminal from \"../components/criminal\";\n\n// Get a random person (not criminal) from the API https://randomuser.me/api/\nexport async function getPersonData(){\n    const res = await fetch('https://randomuser.me/api/');\n    if(!res.ok){\n        throw new Error('Failed to fetch person data');\n    }\n    const data = await res.json();\n    const person = data.results[0];\n    return {\n        name: `${person.name.first} ${person.name.last}`,\n        image: person.picture.large\n    };\n}\n\n// Get a random criminal from the FBI API https://api.fbi.gov/wanted/v1/list\nexport async function getCriminalData(){\n    const res = await fetch('https://api.fbi.gov/wanted/v1/list');\n    if(!res.ok){\n        throw new Error('Failed to fetch criminal data');\n    }\n    const data = await res.json();\n    const randomCriminalIndex = Math.floor(Math.random() * data.items.length);\n    const criminal = data.items[randomCriminalIndex];\n    return {\n        name: criminal.title,\n        image: criminal.images[randomCriminalIndex].large\n    };\n}\n\n// Fetch and display a person\nexport async function displayPerson(){\n    const person = await getPersonData();\n    return (\n        <Person name={person.name} image={person.image} />\n    );\n}\n\n// Fetch and display a criminal\nexport async function displayCriminal(){\n    const criminal = await getCriminalData();\n    return (\n        <Criminal name={criminal.name} image={criminal.image} />\n    );\n}"],"mappings":";AAAA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,eAAeC,aAAaA,CAAA,EAAE;EACjC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;EACrD,IAAG,CAACD,GAAG,CAACE,EAAE,EAAC;IACP,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAClD;EACA,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAC7B,MAAMC,MAAM,GAAGF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC;EAC9B,OAAO;IACHC,IAAI,EAAG,GAAEF,MAAM,CAACE,IAAI,CAACC,KAAM,IAAGH,MAAM,CAACE,IAAI,CAACE,IAAK,EAAC;IAChDC,KAAK,EAAEL,MAAM,CAACM,OAAO,CAACC;EAC1B,CAAC;AACL;;AAEA;AACA,OAAO,eAAeC,eAAeA,CAAA,EAAE;EACnC,MAAMd,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;EAC7D,IAAG,CAACD,GAAG,CAACE,EAAE,EAAC;IACP,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EACpD;EACA,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAC7B,MAAMU,mBAAmB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGd,IAAI,CAACe,KAAK,CAACC,MAAM,CAAC;EACzE,MAAMC,QAAQ,GAAGjB,IAAI,CAACe,KAAK,CAACJ,mBAAmB,CAAC;EAChD,OAAO;IACHP,IAAI,EAAEa,QAAQ,CAACC,KAAK;IACpBX,KAAK,EAAEU,QAAQ,CAACE,MAAM,CAACR,mBAAmB,CAAC,CAACF;EAChD,CAAC;AACL;;AAEA;AACA,OAAO,eAAeW,aAAaA,CAAA,EAAE;EACjC,MAAMlB,MAAM,GAAG,MAAMP,aAAa,CAAC,CAAC;EACpC,oBACID,OAAA,CAACH,MAAM;IAACa,IAAI,EAAEF,MAAM,CAACE,IAAK;IAACG,KAAK,EAAEL,MAAM,CAACK;EAAM;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE1D;;AAEA;AACA,OAAO,eAAeC,eAAeA,CAAA,EAAE;EACnC,MAAMR,QAAQ,GAAG,MAAMP,eAAe,CAAC,CAAC;EACxC,oBACIhB,OAAA,CAACF,QAAQ;IAACY,IAAI,EAAEa,QAAQ,CAACb,IAAK;IAACG,KAAK,EAAEU,QAAQ,CAACV;EAAM;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEhE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}